<?xml version="1.0" encoding="UTF-8"?>

<xwikidoc version="1.3" reference="BachelorsAndMastersManagement.Registration.Bachelors.WebHome" locale="">
  <web>BachelorsAndMastersManagement.Registration.Bachelors</web>
  <name>WebHome</name>
  <language/>
  <defaultLanguage></defaultLanguage>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1356998400000</creationDate>
  <parent>BachelorsAndMastersManagement.Registration.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1356998400000</date>
  <contentUpdateDate>1356998400000</contentUpdateDate>
  <version>1.1</version>
  <title/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>false</hidden>
  <content>{{velocity}}

## ----------variabile de erori
#set ($project_title_error = false)
#set ($project_ref_error = false)
#set ($coordinator_error = false)
#set ($courses_error = false)
## ----------numarul de cursuri ce trebuie alese
#set($maxCoursesDoc = $xwiki.getDocument('BachelorsAndMastersManagement.Setup.SetupData'))
#set($maxCoursesObj = $maxCoursesDoc.getObject('BachelorsAndMastersManagement.Setup.Courses.WebHome'))
#set($maxCourses = $maxCoursesObj.getProperty('count').value)
#if (!$maxCourses)
	#set ($maxCourses = 4)
#end
#set($username = $xcontext.user)
## ----------oprim comentariile, anotarile, atasamentele si istoricul pentru pagina de inregistrare
#set ($showcomments = false)
#set ($showannotations = false)
#set ($showattachments = false)
#set ($showhistory = false)
#set ($showinformation = false)
## ----------query pentru cursurile definite la pasul de setup, salvate intr-o lista
#set($hql = "select distinct doc.name from XWikiDocument as doc where doc.space='BachelorsAndMastersManagement.Setup.Courses' and doc.name &lt;&gt; 'WebPreferences' and doc.name &lt;&gt; 'WebHome'")
#set($results = $xwiki.search($hql))
## ----------obtinem fisierul corespunzator candidatului si obiectele din acesta
#set ($docName = 'BachelorsAndMastersManagement.Registration.Candidates.BachelorCandidates.' + $username.replace('XWiki.', ''))
#set ($doc = $xwiki.getDocument($docName))
#set ($obj = $doc.getObject('BachelorsAndMastersManagement.Registration.Candidate.Code.CandidateClass'))
#set ($courses = [])
## ----------documentul este nou, creem noi obiecte pentru datele candidatului
#if ($doc.isNew())
	#set ($obj = $doc.newObject('BachelorsAndMastersManagement.Registration.Candidate.Code.CandidateClass'))
	#foreach ($i in [1..$maxCourses])
		#set ($discard = $courses.add($doc.newObject('AppWithinMinutes.String')))
	#end
	## --------- drepturi de vizualizare si editare a datelor de catre candidatul curent, profi si admini
	#set ($rightsObj = $doc.newObject('XWiki.XWikiRights'))
	#set ($discard = $rightsObj.set('users', $username))
	#set ($discard = $rightsObj.set('groups', 'XWiki.Profs'))
	#set ($discard = $rightsObj.set('levels', 'view,edit,delete'))
	#set ($discard = $rightsObj.set('allow', 1))
#else
	#set ($project_title = $obj.getProperty('project_title').value)
	#set ($project_ref = $obj.getProperty('project_ref').value)
	#set ($coordinator = $obj.getProperty('coordinator').value)
	#set ($courses = $doc.getObjects('AppWithinMinutes.String'))
	#if ($courses.size() &lt; $maxCourses)
		#set ($diff = $maxCourses - $courses.size())
		#foreach ($i in [1..$diff])
			#set ($discard = $courses.add($doc.newObject('AppWithinMinutes.String')))
		#end
	#end
	#if ($courses.size() &gt; $maxCourses)
		#set ($upBound = $courses.size() - 1)
		#foreach ($i in [$maxCourses..$upBound])
			#set ($discard = $doc.removeObject($courses[$i]))
		#end
	#end
#end
#if ($request.get('submit'))
	#set ($project_title = $request.get('project_title'))
	#if($project_title == '')
		#set ($project_title_error = true)
	#end
	#set ($project_ref = $request.get('project_reference'))
	#if ($project_ref == '')
		#set ($project_ref_error = true)
	#end
	#if ($request.get('coordinator') != '')
		#set ($coordinator = $request.get('coordinator'))
	#else
		#set ($coordinator = $request.get('coordinatorBackup'))
	#end
	#if ($coordinator == '')
		#set ($coordinator_error = true)
	#end
	## ---------- pentru fiecare curs ales, il punem in lista
	#set($i = 0)
	#foreach ($item in $results)
		#if ($request.get($item))
			#set ($discard = $courses[$i].set('shortText', $item))
			#set ($i = $i+1)
		#end
	#end
	#if ($i != $maxCourses)
		#set ($courses_error = true)
	#end
	#if ($project_title_error == false and $project_ref_error == false and $coordinator_error == false and $courses_error == false )
		#set ($discard = $obj.set('full_name', $xwiki.getUserName($username, false)))
		#set ($discard = $obj.set('project_title', $project_title))
		#set ($discard = $obj.set('project_ref', $project_ref))
		#set ($discard = $obj.set('coordinator', $coordinator))
		#set ($discard = $doc.save())
	#end
#end

{{html clean="false"}}

&lt;style type="text/css"&gt;

	.noselect {
	  -webkit-touch-callout: none; /* iOS Safari */
	    -webkit-user-select: none; /* Safari */
	     -khtml-user-select: none; /* Konqueror HTML */
	       -moz-user-select: none; /* Firefox */
	        -ms-user-select: none; /* Internet Explorer/Edge */
	            user-select: none; /* Non-prefixed version, currently
	                                  supported by Chrome and Opera */
	}

	.triggers-panel{
		cursor: pointer;
	}
	#candidate-registration input[type=text]{
		padding: 0 1em;
	}
	#candidate-registration input[type=text].no-padding-right{
		padding-right: 0;
	}
	#candidate-registration input.suggestUsers{
		padding-left: 2em;
	}
	#candidate-registration .indent-left{
		padding-left: 30px;
		border-left: 1px solid #cdcdcd;
	}
	#candidate-registration .row{
		margin: 10px 0;
	}
	#candidate-registration .row .row{
		margin: 0;
	}
	#candidate-registration .row.courses-container label{
		font-size: 12px;
	}
	#candidate-registration .row.courses-container .col .col{
		padding: 0;
	}
	#candidate-registration .row.courses-container{
		position: relative;
		height: 75px;
		overflow: hidden;
	}
	#candidate-registration .row.courses-container.visible{
		height: 100%;
		overflow: visible;
	}
	#courses-trigger{
		float: left;
		margin-right: 10px;
	}
	#courses-trigger i{
		display: none;
	}
	#courses-trigger i#down{
		display: block;
	}
	#courses-trigger.triggered i#up{
		display: block;
	}
	#courses-trigger.triggered i#down{
		display: none;
	}
	.courses-container .courses-cover{
		display: block;
		z-index: 1;
		position: absolute;
		bottom: 0;
		opacity: 1;
		left: 0;
		width: 100%;
		height: 75px;
		background: linear-gradient(transparent, #fff);
	}
	.courses-container.visible .courses-cover{
		opacity: 0;
		z-index: -1;
	}
	.select-course{
		width: calc(100% - 22px);
	    text-align: center;
	    cursor: pointer;
	    padding: 10px;
	    border-radius: 10px;
	    border: 1px solid #ccc;
	    background: #efefef;
	}
	.course-check{
		display: none !important;
	}
	.course-check[checked]+.select-course{
		background: #84eb69;
	}
	p.errors, span.errors{
		color: #ff0000;
	}
	ul.users ~ ul.accepted-suggestions{
		position: absolute;
	    background: #fff;
	    width: 100%;
	    margin-top: -38px;
	}
	#coordinator-container br{
		display: none;
	}
&lt;/style&gt;

&lt;h3&gt;Salut, $xwiki.getUserName($xcontext.user, false)&lt;/h3&gt;
&lt;form action="#" method="POST" id="candidate-registration"&gt;
	&lt;div class="row"&gt;
		&lt;div class="col  col-xs-12"&gt;
			&lt;label for="project_title"&gt;Titlul proiectului&lt;/label&gt;
		&lt;/div&gt;
		&lt;div class="col  col-xs-12"&gt;
			&lt;input type="text" name="project_title" value="$!project_title" /&gt;

		&lt;/div&gt;
        #if ($project_title_error)
	         &lt;div class="col  col-xs-12"&gt;
	            &lt;p class="errors" &gt;Introduceți titlul proiectului.&lt;/p&gt;
	        &lt;/div&gt;
	    #end
	&lt;/div&gt;
    
	&lt;div class="row"&gt;
		&lt;div class="col  col-xs-12"&gt;
			&lt;label for="project_reference"&gt;Sursa proiectului&lt;/label&gt;
		&lt;/div&gt;
		&lt;div class="col  col-xs-12"&gt;
			&lt;input type="text" name="project_reference"   value="$!project_ref"/&gt;
		&lt;/div&gt;
        #if($project_ref_error)
			&lt;div class="col  col-xs-12"&gt;
				&lt;p class="errors"&gt;Introduceți link către sursa și documentația proiectului.&lt;/p&gt;
			&lt;/div&gt;
	    #end
	&lt;/div&gt;
	&lt;div class="row"&gt;
		&lt;div class="col  col-xs-12"&gt;
			&lt;label for="coordinator"&gt;Profesorul coordonator&lt;/label&gt;
		&lt;/div&gt;
		&lt;div id="coordinator-container" class="col col-xs-12"&gt;
			{{/html}}
			$doc.display('coordinator')
			{{html clean="false"}}
			&lt;input type="text" class="no-padding-right suggestUsers withTip" autocomplete="on" name="coordinator" /&gt;
			&lt;input type="hidden" name="coordinatorBackup" value="$coordinator"&gt;
		&lt;/div&gt;
		#if ($coordinator_error)
			&lt;div class="col col-xs-12"&gt;
				&lt;p class="errors" &gt;Selectați profesorul coordonator.&lt;/p&gt;
			&lt;/div&gt;
        #end
	&lt;/div&gt;
	&lt;div class="row triggers-panel"&gt;
		&lt;div class="col col-xs-12"&gt;
			&lt;div id="courses-trigger"&gt;
				&lt;i class="fa fa-chevron-down" id="down"&gt;&lt;/i&gt;
				&lt;i class="fa fa-chevron-up" id="up"&gt;&lt;/i&gt;
			&lt;/div&gt;
			&lt;label class="noselect"&gt;Cursuri &lt;span id="courses-status"&gt;&lt;/span&gt;&lt;/label&gt;
			#if ($courses_error)
				&lt;div class="col col-xs-12"&gt;
					&lt;p class="errors"&gt;Selectați $maxCourses cursuri din lista de mai jos&lt;/p&gt;
				&lt;/div&gt;
			#end
		&lt;/div&gt;
	&lt;/div&gt;
	&lt;div class="row courses-container" id="courses-panel"&gt;
		&lt;div class="courses-cover triggers-panel visible"&gt;&lt;/div&gt;
		&lt;div class="col col-xs-12"&gt;
			&lt;div class="row"&gt;
			#foreach ($item in $results)
				&lt;div class="col col-lg-3 col-md-4 col-sm-6 col-xs-12"&gt;
					#set ($found = false)
					#foreach ($course in $courses)
						#if ($course.shortText == $item)
							#set ($found = true)
						#end
					#end
					#if ($found == true)
					&lt;input type="checkbox" class="course-check" name="$item" value="$item" checked="checked"&gt;
					#else
					&lt;input type="checkbox" class="course-check" name="$item" value="$item"&gt;
					#end						
					&lt;label for="$item" class="noselect select-course truncate-name"&gt;$item&lt;/label&gt;
				&lt;/div&gt;
			#end
			&lt;/div&gt;
		&lt;/div&gt;
	&lt;/div&gt;
	&lt;div class="row"&gt;
		&lt;div class="col col-xs-12"&gt;
			&lt;div class="buttonwrapper"&gt;&lt;input type="submit" class="button" name="submit" value="Inscriere" /&gt;&lt;/div&gt;
		&lt;/div&gt;
	&lt;/div&gt;
&lt;/form&gt;

&lt;script type="text/javascript"&gt;

	function trimCourseNames(){
		let labels = document.getElementsByClassName('truncate-name');
		for (let x = 0; x &lt; labels.length; x++){
			let label = labels[x];
			let content = label.getAttribute('title');
			let len = label.parentNode.offsetWidth/10;
			if(content.length&gt;len)
				content = content.substring(0,len)+'...';
			label.innerHTML=content;
		}
	}

	function showHideCourses(){
		document.getElementById('courses-panel').classList.toggle('visible');
		document.getElementById('courses-trigger').classList.toggle('triggered');
	}

	function updateSelectedCourses(){
		let counter = 0;
		let courses = document.getElementsByClassName('course-check');
		for(let x = 0; x &lt; courses.length; x++){
			let course = courses[x];
			if (course.getAttribute('checked'))
				counter++;
		}
		return counter;
	}

	function updateSelectedCoursesOutput(selectedCourses){
		let output = document.getElementById('courses-status');
		output.innerHTML = '('+selectedCourses+'/$maxCourses)';
		if(selectedCourses!==$maxCourses)
			output.classList.add('errors');
		else
			output.classList.remove('errors');
	}
	updateSelectedCoursesOutput(updateSelectedCourses());
	let coursesPanel = document.getElementById('courses-panel');
	let labels = document.getElementsByClassName('truncate-name');
	for (let x = 0; x &lt; labels.length; x++){
		let label = labels[x];
		let content = label.innerHTML;
		label.setAttribute('title', content);
		label.addEventListener('click', function(){
			let selectedCourses = updateSelectedCourses();
			this.classList.toggle('selected');
			let checkBox = this.previousElementSibling;
			if(checkBox.getAttribute('checked')){
				checkBox.removeAttribute('checked');
				selectedCourses-=1;
			}else{
				if(selectedCourses&lt;$maxCourses){
					checkBox.setAttribute('checked', 'checked');
					selectedCourses+=1;
				}
			}
			updateSelectedCoursesOutput(selectedCourses);
		});
	}
	trimCourseNames();
	window.addEventListener('resize', trimCourseNames);

	let triggers = document.getElementsByClassName('triggers-panel');
	for(let x = 0; x &lt; triggers.length; x++){
		let trigger = triggers[x];
		trigger.addEventListener('click', function(){
			showHideCourses();
		});
	}

&lt;/script&gt;
{{/html}}

{{/velocity}}


 
</content>
</xwikidoc>
